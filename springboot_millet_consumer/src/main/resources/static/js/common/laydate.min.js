!
function(win) {
	var config = {
		path: "",
		defSkin: "default",
		format: "YYYY-MM-DD",
		min: "1900-01-01 00:00:00",
		max: "2099-12-31 23:59:59",
		isv: !1
	},
		Dates = {},
		doc = document,
		creat = "createElement",
		byid = "getElementById",
		tags = "getElementsByTagName",
		as = ["laydate_box", "laydate_void", "laydate_click", "LayDateSkin", "skins/", "/laydate.css"];
	win.laydate = function(options) {
		options = options || {};
		try {
			as.event = win.event ? win.event : laydate.caller.arguments[0]
		} catch (e) {}
		return Dates.run(options), laydate
	}, laydate.v = "1.1", Dates.getPath = function() {
		var js = document.scripts,
			jsPath = js[js.length - 1].src;
		return config.path ? config.path : jsPath.substring(0, jsPath.lastIndexOf("/") + 1)
	}(), Dates.trim = function(str) {
		return str = str || "", str.replace(/^\s|\s$/g, "").replace(/\s+/g, " ")
	}, Dates.digit = function(num) {
		return num < 10 ? "0" + (0 | num) : num
	}, Dates.stopmp = function(e) {
		return e = e || win.event, e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0, this
	}, Dates.each = function(arr, fn) {
		for (var i = 0, len = arr.length; i < len && fn(i, arr[i]) !== !1; i++);
	}, Dates.hasClass = function(elem, cls) {
		return elem = elem || {}, new RegExp("\\b" + cls + "\\b").test(elem.className)
	}, Dates.addClass = function(elem, cls) {
		return elem = elem || {}, Dates.hasClass(elem, cls) || (elem.className += " " + cls), elem.className = Dates.trim(elem.className), this
	}, Dates.removeClass = function(elem, cls) {
		if (elem = elem || {}, Dates.hasClass(elem, cls)) {
			var reg = new RegExp("\\b" + cls + "\\b");
			elem.className = elem.className.replace(reg, "")
		}
		return this
	}, Dates.removeCssAttr = function(elem, attr) {
		var s = elem.style;
		s.removeProperty ? s.removeProperty(attr) : s.removeAttribute(attr)
	}, Dates.shde = function(elem, type) {
		elem.style.display = type ? "none" : "block"
	}, Dates.query = function(node) {
		if (node && 1 === node.nodeType) {
			if ("input" !== node.tagName.toLowerCase()) throw new Error("选择器elem错误");
			return node
		}
		var arr, node = Dates.trim(node).split(" "),
			elemId = doc[byid](node[0].substr(1));
		if (elemId) {
			if (node[1]) {
				if (/^\./.test(node[1])) {
					var find, child = node[1].substr(1),
						exp = new RegExp("\\b" + child + "\\b");
					return arr = [], find = doc.getElementsByClassName ? elemId.getElementsByClassName(child) : elemId[tags]("*"), Dates.each(find, function(ii, that) {
						exp.test(that.className) && arr.push(that)
					}), arr[0] ? arr : ""
				}
				return arr = elemId[tags](node[1]), arr[0] ? elemId[tags](node[1]) : ""
			}
			return elemId
		}
	}, Dates.on = function(elem, even, fn) {
		return elem.attachEvent ? elem.attachEvent("on" + even, function() {
			fn.call(elem, win.even)
		}) : elem.addEventListener(even, fn, !1), Dates
	}, Dates.stopMosup = function(evt, elem) {
		"mouseup" !== evt && Dates.on(elem, "mouseup", function(ev) {
			Dates.stopmp(ev)
		})
	}, Dates.run = function(options) {
		var elem, devt, target, S = Dates.query,
			even = as.event;
		try {
			target = even.target || even.srcElement || {}
		} catch (e) {
			target = {}
		}
		if (elem = options.elem ? S(options.elem) : target, even && target.tagName) {
			if (!elem || elem === Dates.elem) return;
			Dates.stopMosup(even.type, elem), Dates.stopmp(even), Dates.view(elem, options), Dates.reshow()
		} else devt = options.event || "click", Dates.each((0 | elem.length) > 0 ? elem : [elem], function(ii, that) {
			Dates.stopMosup(devt, that), Dates.on(that, devt, function(ev) {
				Dates.stopmp(ev), that !== Dates.elem && (Dates.view(that, options), Dates.reshow())
			})
		})
	}, Dates.scroll = function(type) {
		return type = type ? "scrollLeft" : "scrollTop", doc.body[type] | doc.documentElement[type]
	}, Dates.winarea = function(type) {
		return document.documentElement[type ? "clientWidth" : "clientHeight"]
	}, Dates.isleap = function(year) {
		return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0
	}, Dates.checkVoid = function(YY, MM, DD) {
		var back = [];
		return YY |= 0, MM |= 0, DD |= 0, YY < Dates.mins[0] ? back = ["y"] : YY > Dates.maxs[0] ? back = ["y", 1] : YY >= Dates.mins[0] && YY <= Dates.maxs[0] && (YY == Dates.mins[0] && (MM < Dates.mins[1] ? back = ["m"] : MM == Dates.mins[1] && DD < Dates.mins[2] && (back = ["d"])), YY == Dates.maxs[0] && (MM > Dates.maxs[1] ? back = ["m", 1] : MM == Dates.maxs[1] && DD > Dates.maxs[2] && (back = ["d", 1]))), back
	}, Dates.timeVoid = function(times, index) {
		if (Dates.ymd[1] + 1 == Dates.mins[1] && Dates.ymd[2] == Dates.mins[2]) {
			if (0 === index && times < Dates.mins[3]) return 1;
			if (1 === index && times < Dates.mins[4]) return 1;
			if (2 === index && times < Dates.mins[5]) return 1
		} else if (Dates.ymd[1] + 1 == Dates.maxs[1] && Dates.ymd[2] == Dates.maxs[2]) {
			if (0 === index && times > Dates.maxs[3]) return 1;
			if (1 === index && times > Dates.maxs[4]) return 1;
			if (2 === index && times > Dates.maxs[5]) return 1
		}
		if (times > (index ? 59 : 23)) return 1
	}, Dates.check = function() {
		var reg = Dates.options.format.replace(/YYYY|MM|DD|hh|mm|ss/g, "\\d+\\").replace(/\\$/g, ""),
			exp = new RegExp(reg),
			value = Dates.elem[as.elemv],
			arr = value.match(/\d+/g) || [],
			isvoid = Dates.checkVoid(arr[0], arr[1], arr[2]);
		if ("" !== value.replace(/\s/g, "")) {
			if (!exp.test(value)) return Dates.elem[as.elemv] = "", Dates.msg("日期不符合格式，请重新选择。"), 1;
			if (isvoid[0]) return Dates.elem[as.elemv] = "", Dates.msg("日期不在有效期内，请重新选择。"), 1;
			isvoid.value = Dates.elem[as.elemv].match(exp).join(), arr = isvoid.value.match(/\d+/g), arr[1] < 1 ? (arr[1] = 1, isvoid.auto = 1) : arr[1] > 12 ? (arr[1] = 12, isvoid.auto = 1) : arr[1].length < 2 && (isvoid.auto = 1), arr[2] < 1 ? (arr[2] = 1, isvoid.auto = 1) : arr[2] > Dates.months[(0 | arr[1]) - 1] ? (arr[2] = 31, isvoid.auto = 1) : arr[2].length < 2 && (isvoid.auto = 1), arr.length > 3 && (Dates.timeVoid(arr[3], 0) && (isvoid.auto = 1), Dates.timeVoid(arr[4], 1) && (isvoid.auto = 1), Dates.timeVoid(arr[5], 2) && (isvoid.auto = 1)), isvoid.auto ? Dates.creation([arr[0], 0 | arr[1], 0 | arr[2]], 1) : isvoid.value !== Dates.elem[as.elemv] && (Dates.elem[as.elemv] = isvoid.value)
		}
	}, Dates.months = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], Dates.viewDate = function(Y, M, D) {
		var log = (Dates.query, {}),
			De = new Date;
		Y < (0 | Dates.mins[0]) && (Y = 0 | Dates.mins[0]), Y > (0 | Dates.maxs[0]) && (Y = 0 | Dates.maxs[0]), De.setFullYear(Y, M, D), log.ymd = [De.getFullYear(), De.getMonth(), De.getDate()], Dates.months[1] = Dates.isleap(log.ymd[0]) ? 29 : 28, De.setFullYear(log.ymd[0], log.ymd[1], 1), log.FDay = De.getDay(), log.PDay = Dates.months[0 === M ? 11 : M - 1] - log.FDay + 1, log.NDay = 1, Dates.each(as.tds, function(i, elem) {
			var DD, YY = log.ymd[0],
				MM = log.ymd[1] + 1;
			elem.className = "", i < log.FDay ? (elem.innerHTML = DD = i + log.PDay, Dates.addClass(elem, "laydate_nothis"), 1 === MM && (YY -= 1), MM = 1 === MM ? 12 : MM - 1) : i >= log.FDay && i < log.FDay + Dates.months[log.ymd[1]] ? (elem.innerHTML = DD = i - log.FDay + 1, i - log.FDay + 1 === log.ymd[2] && (Dates.addClass(elem, as[2]), log.thisDay = elem)) : (elem.innerHTML = DD = log.NDay++, Dates.addClass(elem, "laydate_nothis"), 12 === MM && (YY += 1), MM = 12 === MM ? 1 : MM + 1), Dates.checkVoid(YY, MM, DD)[0] && Dates.addClass(elem, as[1]), Dates.options.festival && Dates.festival(elem, MM + "." + DD), elem.setAttribute("y", YY), elem.setAttribute("m", MM), elem.setAttribute("d", DD), YY = MM = DD = null
		}), Dates.valid = !Dates.hasClass(log.thisDay, as[1]), Dates.ymd = log.ymd, as.year.value = Dates.ymd[0] + "年", as.month.value = Dates.digit(Dates.ymd[1] + 1) + "月", Dates.each(as.mms, function(i, elem) {
			var getCheck = Dates.checkVoid(Dates.ymd[0], (0 | elem.getAttribute("m")) + 1);
			"y" === getCheck[0] || "m" === getCheck[0] ? Dates.addClass(elem, as[1]) : Dates.removeClass(elem, as[1]), Dates.removeClass(elem, as[2]), getCheck = null
		}), Dates.addClass(as.mms[Dates.ymd[1]], as[2]), log.times = [0 | Dates.inymd[3] || 0, 0 | Dates.inymd[4] || 0, 0 | Dates.inymd[5] || 0], Dates.each(new Array(3), function(i) {
			Dates.hmsin[i].value = Dates.digit(Dates.timeVoid(log.times[i], i) ? 0 | Dates.mins[i + 3] : 0 | log.times[i])
		}), Dates[Dates.valid ? "removeClass" : "addClass"](as.ok, as[1])
	}, Dates.festival = function(td, md) {
		var str;
		switch (md) {
		case "1.1":
			str = "元旦";
			break;
		case "3.8":
			str = "妇女";
			break;
		case "4.5":
			str = "清明";
			break;
		case "5.1":
			str = "劳动";
			break;
		case "6.1":
			str = "儿童";
			break;
		case "9.10":
			str = "教师";
			break;
		case "10.1":
			str = "国庆"
		}
		str && (td.innerHTML = str), str = null
	}, Dates.viewYears = function(YY) {
		var S = Dates.query,
			str = "";
		Dates.each(new Array(14), function(i) {
			str += 7 === i ? "<li " + (parseInt(as.year.value) === YY ? 'class="' + as[2] + '"' : "") + ' y="' + YY + '">' + YY + "年</li>" : '<li y="' + (YY - 7 + i) + '">' + (YY - 7 + i) + "年</li>"
		}), S("#laydate_ys").innerHTML = str, Dates.each(S("#laydate_ys li"), function(i, elem) {
			"y" === Dates.checkVoid(elem.getAttribute("y"))[0] ? Dates.addClass(elem, as[1]) : Dates.on(elem, "click", function(ev) {
				Dates.stopmp(ev).reshow(), Dates.viewDate(0 | this.getAttribute("y"), Dates.ymd[1], Dates.ymd[2])
			})
		})
	}, Dates.initDate = function() {
		var De = (Dates.query, new Date),
			ymd = Dates.elem[as.elemv].match(/\d+/g) || [];
		ymd.length < 3 && (ymd = Dates.options.start.match(/\d+/g) || [], ymd.length < 3 && (ymd = [De.getFullYear(), De.getMonth() + 1, De.getDate()])), Dates.inymd = ymd, Dates.viewDate(ymd[0], ymd[1] - 1, ymd[2])
	}, Dates.iswrite = function() {
		var S = Dates.query,
			log = {
				time: S("#laydate_hms")
			};
		Dates.shde(log.time, !Dates.options.istime), Dates.shde(as.oclear, !("isclear" in Dates.options ? Dates.options.isclear : 1)), Dates.shde(as.otoday, !("istoday" in Dates.options ? Dates.options.istoday : 1)), Dates.shde(as.ok, !("issure" in Dates.options ? Dates.options.issure : 1))
	}, Dates.viewtb = function() {
		var tr, view = [],
			weeks = ["日", "一", "二", "三", "四", "五", "六"],
			log = {},
			table = doc[creat]("table"),
			thead = doc[creat]("thead");
		return thead.appendChild(doc[creat]("tr")), log.creath = function(i) {
			var th = doc[creat]("th");
			th.innerHTML = weeks[i], thead[tags]("tr")[0].appendChild(th), th = null
		}, Dates.each(new Array(6), function(i) {
			view.push([]), tr = table.insertRow(0), Dates.each(new Array(7), function(j) {
				view[i][j] = 0, 0 === i && log.creath(j), tr.insertCell(j)
			})
		}), table.insertBefore(thead, table.children[0]), table.id = table.className = "laydate_table", tr = view = null, table.outerHTML.toLowerCase()
	}(), Dates.view = function(elem, options) {
		var div, S = Dates.query,
			log = {};
		options = options || elem, Dates.elem = elem, Dates.options = options, Dates.options.format || (Dates.options.format = config.format), Dates.options.start = Dates.options.start || "", Dates.mm = log.mm = [Dates.options.min || config.min, Dates.options.max || config.max], Dates.mins = log.mm[0].match(/\d+/g), Dates.maxs = log.mm[1].match(/\d+/g), as.elemv = /textarea|input/.test(Dates.elem.tagName.toLocaleLowerCase()) ? "value" : "innerHTML", Dates.box ? ($(elem).parent().append($(Dates.box)), Dates.shde(Dates.box)) : (div = doc[creat]("div"), div.id = as[0], div.className = as[0], div.style.cssText = "position: absolute;right:0;", div.setAttribute("name", "laydate-v" + laydate.v), div.innerHTML = log.html = '<div class="laydate_top"><div class="laydate_ym laydate_y" id="laydate_YY"><a class="laydate_choose laydate_chprev laydate_tab"><cite></cite></a><input id="laydate_y" readonly><label></label><a class="laydate_choose laydate_chnext laydate_tab"><cite></cite></a><div class="laydate_yms"><a class="laydate_tab laydate_chtop"><cite></cite></a><ul id="laydate_ys"></ul><a class="laydate_tab laydate_chdown"><cite></cite></a></div></div><div class="laydate_ym laydate_m" id="laydate_MM"><a class="laydate_choose laydate_chprev laydate_tab"><cite></cite></a><input id="laydate_m" readonly><label></label><a class="laydate_choose laydate_chnext laydate_tab"><cite></cite></a><div class="laydate_yms" id="laydate_ms">' +
		function() {
			var str = "";
			return Dates.each(new Array(12), function(i) {
				str += '<span m="' + i + '">' + Dates.digit(i + 1) + "月</span>"
			}), str
		}() + "</div></div></div>" + Dates.viewtb + '<div class="laydate_bottom"><ul id="laydate_hms"><li class="laydate_sj">时间</li><li><input readonly>:</li><li><input readonly>:</li><li><input readonly></li></ul><div class="laydate_time" id="laydate_time"></div><div class="laydate_btn"><a id="laydate_clear">清空</a><a id="laydate_today">今天</a><a id="laydate_ok">确认</a></div>' + (config.isv ? '<a href="http://sentsin.com/layui/laydate/" class="laydate_v" target="_blank">laydate-v' + laydate.v + "</a>" : "") + "</div>", elem.after(div), Dates.box = S("#" + as[0]), Dates.events(), div = null), options.zIndex ? Dates.box.style.zIndex = options.zIndex : Dates.removeCssAttr(Dates.box, "z-index"), Dates.stopMosup("click", Dates.box), Dates.initDate(), Dates.iswrite(), Dates.check()
	}, Dates.reshow = function() {
		return Dates.each(Dates.query("#" + as[0] + " .laydate_show"), function(i, elem) {
			Dates.removeClass(elem, "laydate_show")
		}), this
	}, Dates.close = function() {
		Dates.reshow(), Dates.shde(Dates.query("#" + as[0]), 1), Dates.elem = null
	}, Dates.parse = function(ymd, hms, format) {
		return ymd = ymd.concat(hms), format = format || (Dates.options ? Dates.options.format : config.format), format.replace(/YYYY|MM|DD|hh|mm|ss/g, function(str, index) {
			return ymd.index = 0 | ++ymd.index, Dates.digit(ymd[ymd.index])
		})
	}, Dates.creation = function(ymd, hide) {
		var hms = (Dates.query, Dates.hmsin),
			getDates = Dates.parse(ymd, [hms[0].value, hms[1].value, hms[2].value]);
		Dates.elem[as.elemv] = getDates, hide || (Dates.close(), "function" == typeof Dates.options.choose && Dates.options.choose(getDates))
	}, Dates.events = function() {
		var S = Dates.query,
			log = {
				box: "#" + as[0]
			};
		Dates.addClass(doc.body, "laydate_body"), as.tds = S("#laydate_table td"), as.mms = S("#laydate_ms span"), as.year = S("#laydate_y"), as.month = S("#laydate_m"), Dates.each(S(log.box + " .laydate_ym"), function(i, elem) {
			Dates.on(elem, "click", function(ev) {
				Dates.stopmp(ev).reshow(), Dates.addClass(this[tags]("div")[0], "laydate_show"), i || (log.YY = parseInt(as.year.value), Dates.viewYears(log.YY))
			})
		}), Dates.on(S(log.box), "click", function() {
			Dates.reshow()
		}), log.tabYear = function(type) {
			0 === type ? Dates.ymd[0]-- : 1 === type ? Dates.ymd[0]++ : 2 === type ? log.YY -= 14 : log.YY += 14, type < 2 ? (Dates.viewDate(Dates.ymd[0], Dates.ymd[1], Dates.ymd[2]), Dates.reshow()) : Dates.viewYears(log.YY)
		}, Dates.each(S("#laydate_YY .laydate_tab"), function(i, elem) {
			Dates.on(elem, "click", function(ev) {
				Dates.stopmp(ev), log.tabYear(i)
			})
		}), log.tabMonth = function(type) {
			type ? (Dates.ymd[1]++, 12 === Dates.ymd[1] && (Dates.ymd[0]++, Dates.ymd[1] = 0)) : (Dates.ymd[1]--, Dates.ymd[1] === -1 && (Dates.ymd[0]--, Dates.ymd[1] = 11)), Dates.viewDate(Dates.ymd[0], Dates.ymd[1], Dates.ymd[2])
		}, Dates.each(S("#laydate_MM .laydate_tab"), function(i, elem) {
			Dates.on(elem, "click", function(ev) {
				Dates.stopmp(ev).reshow(), log.tabMonth(i)
			})
		}), Dates.each(S("#laydate_ms span"), function(i, elem) {
			Dates.on(elem, "click", function(ev) {
				Dates.stopmp(ev).reshow(), Dates.hasClass(this, as[1]) || Dates.viewDate(Dates.ymd[0], 0 | this.getAttribute("m"), Dates.ymd[2])
			})
		}), Dates.each(S("#laydate_table td"), function(i, elem) {
			Dates.on(elem, "click", function(ev) {
				Dates.hasClass(this, as[1]) || (Dates.stopmp(ev), Dates.creation([0 | this.getAttribute("y"), 0 | this.getAttribute("m"), 0 | this.getAttribute("d")]));
				$(Dates.box.previousSibling).trigger('change');
			})
		}), as.oclear = S("#laydate_clear"), Dates.on(as.oclear, "click", function() {
			Dates.elem[as.elemv] = "", Dates.close()
		}), as.otoday = S("#laydate_today"), Dates.on(as.otoday, "click", function() {
			var now = new Date;
			Dates.creation([now.getFullYear(), now.getMonth() + 1, now.getDate()]);
			$(Dates.box.previousSibling).trigger('change');
		}), as.ok = S("#laydate_ok"), Dates.on(as.ok, "click", function() {
			Dates.valid && Dates.creation([Dates.ymd[0], Dates.ymd[1] + 1, Dates.ymd[2]]);
			$(Dates.box.previousSibling).trigger('change');
		}), log.times = S("#laydate_time"), Dates.hmsin = log.hmsin = S("#laydate_hms input"), log.hmss = ["小时", "分钟", "秒数"], log.hmsarr = [], Dates.msg = function(i, title) {
			var str = '<div class="laydte_hsmtex">' + (title || "提示") + "<span>×</span></div>";
			"string" == typeof i ? (str += "<p>" + i + "</p>", Dates.shde(S("#" + as[0])), Dates.removeClass(log.times, "laydate_time1").addClass(log.times, "laydate_msg")) : (log.hmsarr[i] ? str = log.hmsarr[i] : (str += '<div id="laydate_hmsno" class="laydate_hmsno">', Dates.each(new Array(0 === i ? 24 : 60), function(i) {
				str += "<span>" + i + "</span>"
			}), str += "</div>", log.hmsarr[i] = str), Dates.removeClass(log.times, "laydate_msg"), Dates[0 === i ? "removeClass" : "addClass"](log.times, "laydate_time1")), Dates.addClass(log.times, "laydate_show"), log.times.innerHTML = str
		}, log.hmson = function(input, index) {
			var span = S("#laydate_hmsno span"),
				set = Dates.valid ? null : 1;
			Dates.each(span, function(i, elem) {
				set ? Dates.addClass(elem, as[1]) : Dates.timeVoid(i, index) ? Dates.addClass(elem, as[1]) : Dates.on(elem, "click", function(ev) {
					Dates.hasClass(this, as[1]) || (input.value = Dates.digit(0 | this.innerHTML))
				})
			}), Dates.addClass(span[0 | input.value], "laydate_click")
		}, Dates.each(log.hmsin, function(i, elem) {
			Dates.on(elem, "click", function(ev) {
				Dates.stopmp(ev).reshow(), Dates.msg(i, log.hmss[i]), log.hmson(this, i)
			})
		}), Dates.on(doc, "mouseup", function() {
			var box = S("#" + as[0]);
			box && "none" !== box.style.display && (Dates.check() || Dates.close())
		}).on(doc, "keydown", function(event) {
			event = event || win.event;
			var codes = event.keyCode;
			13 === codes && Dates.elem && Dates.creation([Dates.ymd[0], Dates.ymd[1] + 1, Dates.ymd[2]]);
			$(Dates.box.previousSibling).trigger('change');
		})
	}, laydate.now = function(timestamp, format) {
		var De = new Date(0 | timestamp ?
		function(tamp) {
			return tamp < 864e5 ? +new Date + 864e5 * tamp : tamp
		}(parseInt(timestamp)) : +new Date);
		return Dates.parse([De.getFullYear(), De.getMonth() + 1, De.getDate()], [De.getHours(), De.getMinutes(), De.getSeconds()], format)
	}, laydate.skin = function(lib) {
		Dates.skinLink.href = Dates.getPath + as[4] + lib + as[5]
	}
}(window);